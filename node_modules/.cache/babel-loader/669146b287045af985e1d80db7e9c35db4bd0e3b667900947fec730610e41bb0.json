{"ast":null,"code":"var _jsxFileName = \"/Users/alicia/Documents/GitHub/magic-memory/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport SingleCard from '../components/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img1.png\"\n}, {\n  \"src\": \"/img2.png\"\n}, {\n  \"src\": \"/img3.png\"\n}, {\n  \"src\": \"/img4.png\"\n}, {\n  \"src\": \"/img5.png\"\n}, {\n  \"src\": \"/img6.png\"\n}, {\n  \"src\": \"/img7.png\"\n}, {\n  \"src\": \"/img8.png\"\n}, {\n  \"src\": \"/img9.png\"\n}, {\n  \"src\": \"/img10.png\"\n}, {\n  \"src\": \"/img11.png\"\n}, {\n  \"src\": \"/img12.png\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n\n  //shuffle card\n  const shuffleCards = () => {\n    const shuffleCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffleCards);\n    setTurns(0);\n  };\n  console.log(cards, turns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DgXGRJOMO6ABd1pIeltbGt1J/vc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","SingleCard","jsxDEV","_jsxDEV","cardImages","App","_s","cards","setCards","turns","setTurns","shuffleCards","sort","Math","random","map","card","id","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/alicia/Documents/GitHub/magic-memory/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\nimport SingleCard from '../components/SingleCard';\n\n\nconst cardImages = [\n  {\"src\": \"/img1.png\"},\n  {\"src\": \"/img2.png\"},\n  {\"src\": \"/img3.png\"},\n  {\"src\": \"/img4.png\"},\n  {\"src\": \"/img5.png\"},\n  {\"src\": \"/img6.png\"},\n  {\"src\": \"/img7.png\"},\n  {\"src\": \"/img8.png\"},\n  {\"src\": \"/img9.png\"},\n  {\"src\": \"/img10.png\"},\n  {\"src\": \"/img11.png\"},\n  {\"src\": \"/img12.png\"}\n]\n\nfunction App() {\n  const[cards, setCards] =useState([]);\n  const[turns, setTurns] = useState(0);\n\n//shuffle card\nconst shuffleCards = () =>{\n  const shuffleCards = [...cardImages, ...cardImages]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({...card, id: Math.random() }))\n\n  setCards(shuffleCards)\n  setTurns(0);\n}\n\nconsole.log(cards, turns);\n\n\n  return (\n    <div className='App'>\n      <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n         <SingleCard />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,MAAMC,UAAU,GAAG,CACjB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAY,CAAC,EACrB;EAAC,KAAK,EAAE;AAAY,CAAC,EACrB;EAAC,KAAK,EAAE;AAAY,CAAC,CACtB;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAK,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;;EAEtC;EACA,MAAMW,YAAY,GAAGA,CAAA,KAAK;IACxB,MAAMA,YAAY,GAAG,CAAC,GAAGP,UAAU,EAAE,GAAGA,UAAU,CAAC,CAChDQ,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAEC,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC,MAAM,CAAC;IAAE,CAAC,CAAC,CAAC;IAEjDN,QAAQ,CAACG,YAAY,CAAC;IACtBD,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAEDQ,OAAO,CAACC,GAAG,CAACZ,KAAK,EAAEE,KAAK,CAAC;EAGvB,oBACEN,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtB,OAAA;MAAQuB,OAAO,EAAEf,YAAa;MAAAU,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhDtB,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBd,KAAK,CAACQ,GAAG,CAACC,IAAI,iBACdb,OAAA,CAACF,UAAU;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CA7BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}