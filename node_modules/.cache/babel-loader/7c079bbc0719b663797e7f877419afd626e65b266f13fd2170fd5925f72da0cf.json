{"ast":null,"code":"var _jsxFileName = \"/Users/alicia/Documents/GitHub/magic-memory/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img1.png\"\n}, {\n  \"src\": \"/img2.png\"\n}, {\n  \"src\": \"/img3.png\"\n}, {\n  \"src\": \"/img4.png\"\n}, {\n  \"src\": \"/img5.png\"\n}, {\n  \"src\": \"/img6.png\"\n}, {\n  \"src\": \"/img7.png\"\n}, {\n  \"src\": \"/img8.png\"\n}, {\n  \"src\": \"/img9.png\"\n}, {\n  \"src\": \"/img10.png\"\n}, {\n  \"src\": \"/img11.png\"\n}, {\n  \"src\": \"/img12.png\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n\n  //shuffle card\n  const shuffleCards = () => {\n    const shuffleCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffleCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3Rb2RowhqfSKkufviexCcjkH0X8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","cardImages","App","_s","cards","setCards","shuffleCards","sort","Math","random","map","card","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alicia/Documents/GitHub/magic-memory/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\n\n\nconst cardImages = [\n  {\"src\": \"/img1.png\"},\n  {\"src\": \"/img2.png\"},\n  {\"src\": \"/img3.png\"},\n  {\"src\": \"/img4.png\"},\n  {\"src\": \"/img5.png\"},\n  {\"src\": \"/img6.png\"},\n  {\"src\": \"/img7.png\"},\n  {\"src\": \"/img8.png\"},\n  {\"src\": \"/img9.png\"},\n  {\"src\": \"/img10.png\"},\n  {\"src\": \"/img11.png\"},\n  {\"src\": \"/img12.png\"}\n]\n\nfunction App() {\n  const [cards, setCards] =useState([]);\n\n//shuffle card\nconst shuffleCards = () =>{\n  const shuffleCards = [...cardImages, ...cardImages]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({...card, id: Math.random() }))\n\n  setCards(shuffleCards)\n}\n\n\n  return (\n    <div className='App'>\n      <h1>Memory Game</h1>\n      <button>New Game</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,MAAMC,UAAU,GAAG,CACjB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAY,CAAC,EACrB;EAAC,KAAK,EAAE;AAAY,CAAC,EACrB;EAAC,KAAK,EAAE;AAAY,CAAC,CACtB;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAEP,QAAQ,CAAC,EAAE,CAAC;;EAEvC;EACA,MAAMQ,YAAY,GAAGA,CAAA,KAAK;IACxB,MAAMA,YAAY,GAAG,CAAC,GAAGL,UAAU,EAAE,GAAGA,UAAU,CAAC,CAChDM,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAEC,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC,MAAM,CAAC;IAAE,CAAC,CAAC,CAAC;IAEjDJ,QAAQ,CAACC,YAAY,CAAC;EACxB,CAAC;EAGC,oBACEN,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAAc,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACf,EAAA,CAnBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}