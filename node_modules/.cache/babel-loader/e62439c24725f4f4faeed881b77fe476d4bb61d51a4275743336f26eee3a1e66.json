{"ast":null,"code":"var _jsxFileName = \"/Users/alicia/Documents/GitHub/magic-memory/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img1.png\"\n}, {\n  \"src\": \"/img2.png\"\n}, {\n  \"src\": \"/img3.png\"\n}, {\n  \"src\": \"/img4.png\"\n}, {\n  \"src\": \"/img5.png\"\n}, {\n  \"src\": \"/img6.png\"\n}, {\n  \"src\": \"/img7.png\"\n}, {\n  \"src\": \"/img8.png\"\n}, {\n  \"src\": \"/img9.png\"\n}, {\n  \"src\": \"/img10.png\"\n}, {\n  \"src\": \"/img11.png\"\n}, {\n  \"src\": \"/img12.png\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  //shuffle card\n  const shuffleCards = () => {\n    const shuffleCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffleCards);\n    setTurns(0);\n  };\n\n  //handle a choice\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DO2pSOM9quZWZQnC2EWzdU2DmF4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","SingleCard","jsxDEV","_jsxDEV","cardImages","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","sort","Math","random","map","card","id","handleChoice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/alicia/Documents/GitHub/magic-memory/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard.js';\n\n\nconst cardImages = [\n  {\"src\": \"/img1.png\"},\n  {\"src\": \"/img2.png\"},\n  {\"src\": \"/img3.png\"},\n  {\"src\": \"/img4.png\"},\n  {\"src\": \"/img5.png\"},\n  {\"src\": \"/img6.png\"},\n  {\"src\": \"/img7.png\"},\n  {\"src\": \"/img8.png\"},\n  {\"src\": \"/img9.png\"},\n  {\"src\": \"/img10.png\"},\n  {\"src\": \"/img11.png\"},\n  {\"src\": \"/img12.png\"}\n]\n\nfunction App() {\n  const[cards, setCards] =useState([]);\n  const[turns, setTurns] = useState(0);\n  const[choiceOne, setChoiceOne] = useState(null);\n  const[choiceTwo, setChoiceTwo] = useState(null);\n\n//shuffle card\nconst shuffleCards = () =>{\n  const shuffleCards = [...cardImages, ...cardImages]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({...card, id: Math.random() }))\n\n  setCards(shuffleCards)\n  setTurns(0);\n}\n\n//handle a choice\nconst handleChoice = (card) =>{\n  choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n}\n\n\n  return (\n    <div className='App'>\n      <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n         <SingleCard key={card.id} card={card} handleChoice={handleChoice}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,MAAMC,UAAU,GAAG,CACjB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAW,CAAC,EACpB;EAAC,KAAK,EAAE;AAAY,CAAC,EACrB;EAAC,KAAK,EAAE;AAAY,CAAC,EACrB;EAAC,KAAK,EAAE;AAAY,CAAC,CACtB;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAK,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAK,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC/C,MAAK,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAEjD;EACA,MAAMe,YAAY,GAAGA,CAAA,KAAK;IACxB,MAAMA,YAAY,GAAG,CAAC,GAAGX,UAAU,EAAE,GAAGA,UAAU,CAAC,CAChDY,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAEC,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC,MAAM,CAAC;IAAE,CAAC,CAAC,CAAC;IAEjDV,QAAQ,CAACO,YAAY,CAAC;IACtBL,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;;EAED;EACA,MAAMY,YAAY,GAAIF,IAAI,IAAI;IAC5BT,SAAS,GAAGG,YAAY,CAACM,IAAI,CAAC,GAAGR,YAAY,CAACQ,IAAI,CAAC;EACrD,CAAC;EAGC,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzB,OAAA;MAAQ0B,OAAO,EAAEd,YAAa;MAAAS,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhDzB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBjB,KAAK,CAACY,GAAG,CAACC,IAAI,iBACdjB,OAAA,CAACF,UAAU;QAAemB,IAAI,EAAEA,IAAK;QAACE,YAAY,EAAEA;MAAa,GAAhDF,IAAI,CAACC,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0C,CAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAlCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}